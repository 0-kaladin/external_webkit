<<<<<<< HEAD
2010-01-29  Steve Falkenburg  <sfalken@apple.com>

        Reviewed by Darin Adler.

        Timeout for client-based Geolocation shouldn't start until user gives consent
        https://bugs.webkit.org/show_bug.cgi?id=34352

        * page/Geolocation.cpp:
        (WebCore::Geolocation::startRequest): Don't start timer if we're blocked on user consent.
        (WebCore::Geolocation::setIsAllowed): Start timer after user gives consent.

2010-01-29  Steve Falkenburg  <sfalken@apple.com>

        Build fix.

        * page/Geolocation.cpp:
        (WebCore::Geolocation::startUpdating):

2010-01-29  Steve Falkenburg  <sfalken@apple.com>

        Reviewed by Darin Adler.

        Client-based Geolocation starts updating before getting consent from the user
        https://bugs.webkit.org/show_bug.cgi?id=34343

        * page/Geolocation.cpp:
        (WebCore::Geolocation::startRequest): Pass notifier instead of options to startUpdating.
        (WebCore::Geolocation::setIsAllowed): Add the observer or notify of error for deferred startUpdating.
        (WebCore::Geolocation::startUpdating): Pass notifier instead of options, since we may need to call it if we fail to get user consent.
        Defer adding the observer if we don't yet have user consent, since this could kick off
        server-based wifi Geolocation requests.
        * page/Geolocation.h:

2010-01-22  Steve Falkenburg  <sfalken@apple.com>

        Reviewed by Dan Bernstein.

        Crash in fast/dom/Window/window-properties if Geolocation enabled
        https://bugs.webkit.org/show_bug.cgi?id=34013
        
        Add null check to fix Geolocation crash in fast/dom/Window/window-properties.
        
        * page/Geolocation.cpp:
        (WebCore::createGeoposition):

2010-01-26  Steve Block  <steveblock@google.com>

        Reviewed by Adam Barth.

        Moves JSC-specific classes from bridge/jni/JNIBridge to bridge/jni/jsc/JNIBridgeJSC
        https://bugs.webkit.org/show_bug.cgi?id=33958

        This allows bridge/jni/JNIBridge to be used with both JSC and V8.
        A later change will add the V8 equivalent of these JSC-specific classes.

        No new tests, refactoring only.

        * Android.jscbindings.mk: Modified. Added JNIBridgeJSC.cpp
        * GNUmakefile.am: Modified. Added JNIBridgeJSC.h
        * WebCore.xcodeproj/project.pbxproj: Modified. Added JNIBridgeJSC.[cpp|h]
        * bridge/jni/JNIBridge.cpp: Modified. Moved JavaField and JavaArray to JNIBridgeJSC.cpp
        (appendClassName): Modfied. Guard calls to JSLock
        (JavaMethod::signature): Modfied. Guard calls to JSLock
        * bridge/jni/JNIBridge.h: Modified. Moved JavaField and JavaArray to JNIBridgeJSC.h
        * bridge/jni/jsc/JNIBridgeJSC.cpp: Copied from WebCore/bridge/jni/JNIBridge.cpp.
        * bridge/jni/jsc/JNIBridgeJSC.h: Copied from WebCore/bridge/jni/JNIBridge.h.
        * bridge/jni/jsc/JNIUtilityPrivate.cpp: Modified. Include JNIBridgeJSC.h
        * bridge/jni/jsc/JavaClassJSC.h: Modified. Include JNIBridgeJSC.h
        * bridge/jni/jsc/JavaInstanceJSC.cpp: Modified. Include JNIBridgeJSC.h

2010-01-18  Steve Falkenburg  <sfalken@apple.com>

        Reviewed by Sam Weinig.

        <https://bugs.webkit.org/show_bug.cgi?id=33816>        
        Crashes in Geolocation code due to refcounting, observer balance issues.
        
        Hold a ref to the GeoNotifier while dispatching a callback. The code was
        copying a data member to avoid accessing a freed this ptr, but was still
        using the this ptr.
        
        Geolocation::removeObserver calls are not always balanced with addObserver.
        Instead of asserting and continuing, don't try to remove non-existant
        observers.

        * page/Geolocation.cpp:
        (WebCore::Geolocation::GeoNotifier::timerFired): Protect notifier.
        * page/GeolocationController.cpp:
        (WebCore::GeolocationController::removeObserver): Change ASSERT into an if with early return.

2009-12-14  Sam Weinig  <sam@webkit.org>

        Fix the build.

        * page/Geolocation.cpp:
        * page/Geolocation.h:

2010-01-21  Steve Block  <steveblock@google.com>

        Reviewed by David Levin.

        Move bridge interfaces Field, Class, Instance and Array from Bridge to BridgeJSC
        https://bugs.webkit.org/show_bug.cgi?id=33589

        These interfaces use JSC-specific types, so are moved out of Bridge.h to allow the file to
        be used with both JSC and V8.

        No new tests, refactoring only.

        * Android.jscbindings.mk: Modified. Removed Bridge.cpp and added BridgeJSC.cpp
        * GNUmakefile.am: Modified. Removed Bridge.cpp and added BridgeJSC.[cpp|h]
        * WebCore.pro: Modified. Removed Bridge.cpp and added BridgeJSC.[cpp|h]
        * WebCore.xcodeproj/project.pbxproj: Modified. Removed Bridge.cpp and added BridgeJSC.[cpp|h]
        * WebCoreSources.bkl: Modified. Removed Bridge.cpp and added BridgeJSC.cpp
        * bridge/Bridge.cpp: Removed.
        * bridge/Bridge.h: Modfied. Moved Field, Class, Instance and Array interfaces to BridgeJSC.h
        * bridge/jsc: Added.
        * bridge/jsc/BridgeJSC.cpp: Copied from WebCore/bridge/Bridge.cpp.
        * bridge/jsc/BridgeJSC.h: Copied from WebCore/bridge/Bridge.h.

2010-01-21  Steve Block  <steveblock@google.com>

        Reviewed by David Levin.

        Fixes style in WebCore/bridge/jni/JNIBridge
        https://bugs.webkit.org/show_bug.cgi?id=33914

        No new tests, style fixes only.

        * bridge/jni/JNIBridge.cpp:
        * bridge/jni/JNIBridge.h:

2010-01-20  Steve Block  <steveblock@google.com>

        Reviewed by David Levin.

        Renames jni_runtime.[cpp|h] to JNIBridge.[cpp|h]
        https://bugs.webkit.org/show_bug.cgi?id=33899

        No new tests, refactoring only.

        * Android.jscbindings.mk: Modified. Removes jni_runtime.cpp and adds JNIBridge.cpp
        * GNUmakefile.am: Modified. Removes jni_runtime.h and adds JNIBridge.h
        * WebCore.xcodeproj/project.pbxproj: Modified. Removes jni_runtime.[cpp|h] and adds JNIBridge.[cpp|h]
        * bridge/jni/JNIBridge.cpp: Copied from WebCore/bridge/jni/jni_runtime.cpp.
        * bridge/jni/JNIBridge.h: Copied from WebCore/bridge/jni/jni_runtime.h.
        * bridge/jni/jni_jsobject.mm: Modified. Updated to include JNIBridge.h
        * bridge/jni/jni_runtime.cpp: Removed.
        * bridge/jni/jni_runtime.h: Removed.
        * bridge/jni/jsc/JNIUtilityPrivate.cpp: Modified. Updated to include JNIBridge.h
        * bridge/jni/jsc/JavaClassJSC.cpp: Modified. Removed superfluous include
        * bridge/jni/jsc/JavaClassJSC.h: Modified. Updated to include JNIBridge.h
        * bridge/jni/jsc/JavaInstanceJSC.cpp: Modified. Updated to include JNIBridge.h

2010-01-20  Steve Block  <steveblock@google.com>

        Reviewed by David Levin.

        Fixes style in WebCore/bridge/Bridge
        https://bugs.webkit.org/show_bug.cgi?id=33839

        No new tests, style fixes only.

        * bridge/Bridge.cpp: Modified.
        * bridge/Bridge.h: Modified.
        * bridge/c/c_instance.cpp: Modified.
        (JSC::Bindings::CInstance::invokeMethod): Modified. Use renamed m_rootObject member
        (JSC::Bindings::CInstance::invokeDefaultMethod): Modified. Use renamed m_rootObject member
        (JSC::Bindings::CInstance::invokeConstruct): Modified. Use renamed m_rootObject member
        * bridge/jni/jni_runtime.cpp: Modified.
        (JavaArray::JavaArray): Modified. Use renamed m_rootObject member
        (JavaArray::rootObject): Modified. Use renamed m_rootObject member
        * bridge/objc/objc_instance.mm: Modified.
        (ObjcInstance::invokeMethod): Modified. Use renamed m_rootObject member
        (ObjcInstance::invokeDefaultMethod): Modified. Use renamed m_rootObject member
        (ObjcInstance::getValueOfUndefinedField): Modified. Use renamed m_rootObject member
        * bridge/objc/objc_runtime.mm: Modified.
        (JSC::Bindings::ObjcArray::valueAt): Modified. Use renamed m_rootObject member
        * bridge/qt/qt_runtime.cpp: Modified.
        (JSC::Bindings::::rootObject): Modified. Use renamed m_rootObject member

2010-01-19  Steve Block  <steveblock@google.com>

        Reviewed by David Levin.

        Fixes style in WebCore/bridge/JNIUtility
        https://bugs.webkit.org/show_bug.cgi?id=33870

        No new tests, style fixes only.

        * bridge/jni/JNIUtility.cpp:
        * bridge/jni/JNIUtility.h:

2010-01-19  Steve Block  <steveblock@google.com>

        Reviewed by David Levin.

        Renames jni_utility and jni_utility_private to JNIUtility and JNIUtilityPrivate
        https://bugs.webkit.org/show_bug.cgi?id=33843

        No new tests, refactoring only.

        * Android.jscbindings.mk:
        * Android.v8bindings.mk:
        * GNUmakefile.am:
        * WebCore.xcodeproj/project.pbxproj:
        * bridge/jni/JNIUtility.cpp: Copied from WebCore/bridge/jni/jni_utility.cpp.
        * bridge/jni/JNIUtility.h: Copied from WebCore/bridge/jni/jni_utility.h.
        * bridge/jni/jni_jsobject.mm:
        * bridge/jni/jni_objc.mm:
        * bridge/jni/jni_runtime.cpp:
        * bridge/jni/jni_runtime.h:
        * bridge/jni/jni_utility.cpp: Removed.
        * bridge/jni/jni_utility.h: Removed.
        * bridge/jni/jsc/JNIUtilityPrivate.cpp: Copied from WebCore/bridge/jni/jsc/jni_utility_private.cpp.
        (JSC::Bindings::convertValueToJValue):
        * bridge/jni/jsc/JNIUtilityPrivate.h: Copied from WebCore/bridge/jni/jsc/jni_utility_private.h.
        * bridge/jni/jsc/JavaClassJSC.cpp:
        * bridge/jni/jsc/JavaInstanceJSC.cpp:
        * bridge/jni/jsc/JavaStringJSC.h:
        * bridge/jni/jsc/jni_utility_private.cpp: Removed.
        * bridge/jni/jsc/jni_utility_private.h: Removed.
        * platform/android/GeolocationServiceBridge.cpp:
        * platform/android/GeolocationServiceBridge.h:
        * platform/android/TemporaryLinkStubs.cpp:

2010-01-19  Steve Block  <steveblock@google.com>

        Reviewed by David Levin.

        Fixes style in WebCore/bridge/jni/jsc/JavaClassJSC
        https://bugs.webkit.org/show_bug.cgi?id=33819

        No new tests, style fixes only.

        * bridge/jni/jsc/JavaClassJSC.cpp: Modified.
        * bridge/jni/jsc/JavaClassJSC.h: Modified.

2010-01-18  Steve Block  <steveblock@google.com>

        Reviewed by Adam Barth.

        Moves JSC-specific implementation of JavaString to a private implementation class.
        https://bugs.webkit.org/show_bug.cgi?id=33558

        Also modifies JavaField::name and JavaMethod::name to return const JavaString&, rather than UString::Rep*,
        which is JSC-specific. This allows this code to be used with both JSC and V8, as required by Android.

        No new tests, refactoring only.

        * WebCore.xcodeproj/project.pbxproj: Modified. Added JavaStringJSC.h
        * bridge/jni/jni_class.cpp: Modified.
        (JavaClass::JavaClass): Modified. Updates call sites of JavaField::name and JavaMethod::name.
        * bridge/jni/jni_runtime.h: Modified.
        (JSC::Bindings::JavaString::JavaString): Modified. Pass through to implementation.
        (JSC::Bindings::JavaString::UTF8String): Modified. Pass through to implementation.
        (JSC::Bindings::JavaString::uchars): Modified. Pass through to implementation.
        (JSC::Bindings::JavaString::length): Modified. Pass through to implementation.
        (JSC::Bindings::JavaString::operator UString): Modified. Pass through to implementation.
        (JSC::Bindings::JavaField::name): Modified. Pass through to implementation.
        (JSC::Bindings::JavaMethod::name): Modified. Pass through to implementation.
        * bridge/jni/jsc/JavaStringJSC.h: Added.
        (JSC::Bindings::JavaStringImpl::~JavaStringImpl):
        (JSC::Bindings::JavaStringImpl::init):
        (JSC::Bindings::JavaStringImpl::UTF8String):
        (JSC::Bindings::JavaStringImpl::uchars):
        (JSC::Bindings::JavaStringImpl::length):
        (JSC::Bindings::JavaStringImpl::uString):

2010-01-19  Steve Block  <steveblock@google.com>

        Reviewed by Adam Barth.

        Renames WebCore/bridge/runtime.[cpp|h] to WebCore/bridge/Bridge.[cpp|h]
        https://bugs.webkit.org/show_bug.cgi?id=33801

        runtime.[cpp|h] contains general interface classes for use in the bridge,
        so Bridge is a more appropriate name than runtime.

        No new tests, renaming only.

        * Android.jscbindings.mk:
        * GNUmakefile.am:
        * WebCore.pro:
        * WebCore.xcodeproj/project.pbxproj:
        * WebCoreSources.bkl:
        * bindings/js/JSPluginElementFunctions.cpp:
        * bindings/js/ScriptControllerGtk.cpp:
        * bindings/js/ScriptControllerHaiku.cpp:
        * bindings/js/ScriptControllerMac.mm:
        * bindings/js/ScriptControllerQt.cpp:
        * bindings/js/ScriptControllerWin.cpp:
        * bindings/js/ScriptControllerWx.cpp:
        * bindings/js/ScriptInstance.h:
        * bindings/objc/WebScriptObject.mm:
        * bridge/Bridge.cpp: Copied from WebCore/bridge/runtime.cpp.
        * bridge/Bridge.h: Copied from WebCore/bridge/runtime.h.
        * bridge/c/c_class.h:
        * bridge/c/c_instance.h:
        * bridge/c/c_runtime.h:
        * bridge/jni/jni_instance.h:
        * bridge/objc/objc_runtime.h:
        * bridge/qt/qt_class.h:
        * bridge/qt/qt_instance.h:
        * bridge/qt/qt_runtime.cpp:
        * bridge/qt/qt_runtime.h:
        * bridge/runtime.cpp: Removed.
        * bridge/runtime.h: Removed.
        * bridge/runtime_array.h:
        * bridge/runtime_method.h:
        * bridge/runtime_object.h:
        * bridge/runtime_root.cpp:
        * bridge/testbindings.cpp:
        * bridge/testbindings.mm:
        * bridge/testqtbindings.cpp:
        * page/win/FrameWin.cpp:
        * platform/graphics/wince/MediaPlayerProxy.cpp:
        * plugins/PluginView.cpp:
        * plugins/gtk/PluginViewGtk.cpp:
        * plugins/mac/PluginViewMac.cpp:
        * plugins/qt/PluginViewQt.cpp:
        * plugins/symbian/PluginViewSymbian.cpp:
        * plugins/win/PluginViewWin.cpp:

2010-01-18  Steve Block  <steveblock@google.com>

        Reviewed by Adam Barth.

        Fix style in WebCore/bridge/jni/jsc/JavaInstanceJSC.[cpp|h]
        https://bugs.webkit.org/show_bug.cgi?id=33792

        No new tests, style fixes only.

        * bridge/jni/jni_runtime.cpp: Modified.
        (JavaField::dispatchValueFromInstance): Modified. Updated to use renamed JavaInstance::m_instance
        (JavaField::dispatchSetValueToInstance): Modified. Updated to use renamed JavaInstance::m_instance
        (JavaArray::JavaArray): Modified. Updated to use renamed JavaInstance::m_instance
        * bridge/jni/jni_runtime.h: Modified.
        (JSC::Bindings::JavaArray::javaArray): Modified. Updated to use renamed JavaInstance::m_instance
        * bridge/jni/jsc/JavaInstanceJSC.cpp: Modified. Fixed style
        * bridge/jni/jsc/JavaInstanceJSC.h: Modified. Fixed style

2010-01-18  Steve Block  <steveblock@google.com>

        Reviewed by Adam Barth.

        Moves JSC-specific version of JavaInstance from bridge/jni/jni_instance to bridge/jni/jsc/JavaInstanceJSC
        https://bugs.webkit.org/show_bug.cgi?id=33672

        No new tests, refactoring only.

        * Android.jscbindings.mk: Modified. Removed jni_instance.cpp and added JavaInstanceJSC.cpp
        * GNUmakefile.am: Modified. Removed jni_instance.h and added JavaInstanceJSC.h
        * WebCore.xcodeproj/project.pbxproj: Modified. Removed jni_instance.[cpp|h] and added JavaInstanceJSC.[cpp|h]
        * bindings/js/ScriptControllerMac.mm: Modified. Includes JavaInstanceJSC.h
        * bridge/jni/jni_instance.cpp: Removed.
        * bridge/jni/jni_instance.h: Removed.
        * bridge/jni/jni_runtime.h: Modified. Includes JavaInstanceJSC.h
        * bridge/jni/jsc/JavaInstanceJSC.cpp: Copied from WebCore/bridge/jni/jni_instance.cpp.
        * bridge/jni/jsc/JavaInstanceJSC.h: Copied from WebCore/bridge/jni/jni_instance.h.

2009-12-13  Sam Weinig  <sam@webkit.org>

        Reviewed by Dan Bernstein.

        Fix for https://bugs.webkit.org/show_bug.cgi?id=32499
        Add client based Geolocation provider

        Add first cut of a client based Geolocation provider. This is guarded by
        ENABLE(CLIENT_BASED_GEOLOCATION) and is off by default for now. This adds a
        GeolocationControllerClient interface that no-one currently implements,
        but will in a subsequent patch.

        * GNUmakefile.am:
        * WebCore.base.exp:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * WebCoreSources.bkl:
        * page/Geolocation.cpp:
        (WebCore::createGeopositionFromGeolocationPosition):
        (WebCore::createPositionErrorFromGeolocationError):
        (WebCore::Geolocation::Geolocation):
        (WebCore::Geolocation::~Geolocation):
        (WebCore::Geolocation::disconnectFrame):
        (WebCore::Geolocation::lastPosition):
        (WebCore::Geolocation::startRequest):
        (WebCore::Geolocation::fatalErrorOccurred):
        (WebCore::Geolocation::requestTimedOut):
        (WebCore::Geolocation::clearWatch):
        (WebCore::Geolocation::handleError):
        (WebCore::Geolocation::positionChanged):
        (WebCore::Geolocation::makeSuccessCallbacks):
        (WebCore::Geolocation::errorOccurred):
        (WebCore::Geolocation::geolocationServicePositionChanged):
        (WebCore::Geolocation::geolocationServiceErrorOccurred):
        (WebCore::Geolocation::startUpdating):
        (WebCore::Geolocation::stopUpdating):
        * page/Geolocation.h:
        * page/GeolocationController.cpp: Added.
        (WebCore::GeolocationController::GeolocationController):
        (WebCore::GeolocationController::~GeolocationController):
        (WebCore::GeolocationController::addObserver):
        (WebCore::GeolocationController::removeObserver):
        (WebCore::GeolocationController::positionChanged):
        (WebCore::GeolocationController::errorOccurred):
        (WebCore::GeolocationController::lastPosition):
        * page/GeolocationController.h: Added.
        * page/GeolocationControllerClient.h: Added.
        (WebCore::GeolocationControllerClient::~GeolocationControllerClient):
        * page/GeolocationError.h: Added.
        (WebCore::GeolocationError::):
        (WebCore::GeolocationError::create):
        (WebCore::GeolocationError::code):
        (WebCore::GeolocationError::message):
        * page/GeolocationPosition.h: Added.
        (WebCore::GeolocationPosition::create):
        (WebCore::GeolocationPosition::timestamp):
        (WebCore::GeolocationPosition::latitude):
        (WebCore::GeolocationPosition::longitude):
        (WebCore::GeolocationPosition::accuracy):
        (WebCore::GeolocationPosition::altitude):
        (WebCore::GeolocationPosition::altitudeAccuracy):
        (WebCore::GeolocationPosition::heading):
        (WebCore::GeolocationPosition::speed):
        (WebCore::GeolocationPosition::canProvideAltitude):
        (WebCore::GeolocationPosition::canProvideAltitudeAccuracy):
        (WebCore::GeolocationPosition::canProvideHeading):
        (WebCore::GeolocationPosition::canProvideSpeed):
        (WebCore::GeolocationPosition::GeolocationPosition):
        * page/Geoposition.h:
        (WebCore::Geoposition::create):
        * page/Page.cpp:
        (WebCore::Page::Page):
        * page/Page.h:
        (WebCore::Page::geolocationController):
        * svg/graphics/SVGImage.cpp:
        (WebCore::SVGImage::dataChanged):

2009-12-10  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=32140
        REGRESSION(r50072): Mailman administrative functionality is broken

        Test: http/tests/misc/percent-sign-in-form-field-name.html

        * platform/network/FormDataBuilder.cpp: (WebCore::appendQuotedString): Don't encode percent
        sign, we never had a good reason to do that.

2009-12-10  Kent Hansen  <kent.hansen@nokia.com>

        Reviewed by Geoffrey Garen.

        Remove getPropertyAttributes() from JavaScript bindings.
        https://bugs.webkit.org/show_bug.cgi?id=31933

        The functionality is provided by getOwnPropertyDescriptor().

        * WebCore.order:
        * bindings/js/JSDOMWindowCustom.cpp:
        * bindings/js/JSDOMWindowShell.cpp:
        * bindings/js/JSDOMWindowShell.h:
        * bindings/scripts/CodeGeneratorJS.pm:
        * page/DOMWindow.idl:

2009-12-10  Kenneth Russell  <kbr@google.com>

        Reviewed by Oliver Hunt.

        Changed WebGLRenderingContext to synthesize GL errors rather than
        raising JavaScript exceptions. Removed internal getError() calls
        after each graphics call. The GraphicsContext3D maintains the
        synthetic exceptions because only it has complete information
        about certain conditions requiring them to be raised.

        Based on idea from Ilmari Heikkinen, added create3DDebugContext()
        to webgl-test.js and changed the WebGL layout tests expecting
        error conditions to use it. Updated expected.txt files, which now
        implicitly test the OpenGL error as it is part of the exception's
        message.

        Added new targeted test covering aspects of synthetic errors as
        well as regression tests for bugs uncovered during its development.

        Test: fast/canvas/webgl/error-reporting.html

        * html/canvas/WebGLRenderingContext.cpp:
        (WebCore::WebGLRenderingContext::sizeInBytes):
        (WebCore::WebGLRenderingContext::activeTexture):
        (WebCore::WebGLRenderingContext::attachShader):
        (WebCore::WebGLRenderingContext::bindAttribLocation):
        (WebCore::WebGLRenderingContext::bindBuffer):
        (WebCore::WebGLRenderingContext::bindFramebuffer):
        (WebCore::WebGLRenderingContext::bindRenderbuffer):
        (WebCore::WebGLRenderingContext::bindTexture):
        (WebCore::WebGLRenderingContext::bufferData):
        (WebCore::WebGLRenderingContext::bufferSubData):
        (WebCore::WebGLRenderingContext::compileShader):
        (WebCore::WebGLRenderingContext::createShader):

2010-01-18  Steve Block  <steveblock@google.com>

        Reviewed by Adam Barth.

        Moves JSC-specific version of JavaClass from bridge/jni/jni_class to bridge/jni/jsc/JavaClassJSC
        https://bugs.webkit.org/show_bug.cgi?id=33561

        No new tests, refactoring only.

        * Android.jscbindings.mk: Modified. Removed jni_class.cpp and added JavaClassJSC.cpp
        * GNUmakefile.am: Modified. Removed jni_class.h and added JavaClassJSC.h
        * WebCore.xcodeproj/project.pbxproj: Modified. Removed jni_class.[cpp|h] and added JavaClassJSC.[cpp|h]
        * bridge/jni/jni_class.cpp: Removed.
        * bridge/jni/jni_class.h: Removed.
        * bridge/jni/jsc/JavaClassJSC.cpp: Copied from WebCore/bridge/jni/jni_class.cpp.
        * bridge/jni/jsc/JavaClassJSC.h: Copied from WebCore/bridge/jni/jni_class.h.
        * bridge/jni/jsc/JavaInstanceJSC.cpp: Modified. Includes JavaClassJSC.h
        (WebCore::WebGLRenderingContext::detachShader):
        (WebCore::WebGLRenderingContext::disableVertexAttribArray):
        (WebCore::WebGLRenderingContext::drawArrays):
        (WebCore::WebGLRenderingContext::drawElements):
        (WebCore::WebGLRenderingContext::enableVertexAttribArray):
        (WebCore::WebGLRenderingContext::framebufferRenderbuffer):
        (WebCore::WebGLRenderingContext::framebufferTexture2D):
        (WebCore::WebGLRenderingContext::getActiveAttrib):
        (WebCore::WebGLRenderingContext::getActiveUniform):
        (WebCore::WebGLRenderingContext::getBufferParameter):
        (WebCore::WebGLRenderingContext::getFramebufferAttachmentParameter):
        (WebCore::WebGLRenderingContext::getParameter):
        (WebCore::WebGLRenderingContext::getProgramParameter):
        (WebCore::WebGLRenderingContext::getProgramInfoLog):
        (WebCore::WebGLRenderingContext::getRenderbufferParameter):
        (WebCore::WebGLRenderingContext::getShaderParameter):
        (WebCore::WebGLRenderingContext::getShaderInfoLog):
        (WebCore::WebGLRenderingContext::getShaderSource):
        (WebCore::WebGLRenderingContext::getTexParameter):
        (WebCore::WebGLRenderingContext::getUniform):
        (WebCore::WebGLRenderingContext::getUniformLocation):
        (WebCore::WebGLRenderingContext::getVertexAttrib):
        (WebCore::WebGLRenderingContext::linkProgram):
        (WebCore::WebGLRenderingContext::shaderSource):
        (WebCore::WebGLRenderingContext::texImage2D):
        (WebCore::WebGLRenderingContext::texSubImage2D):
        (WebCore::WebGLRenderingContext::uniform1f):
        (WebCore::WebGLRenderingContext::uniform1fv):
        (WebCore::WebGLRenderingContext::uniform1i):
        (WebCore::WebGLRenderingContext::uniform1iv):
        (WebCore::WebGLRenderingContext::uniform2f):
        (WebCore::WebGLRenderingContext::uniform2fv):
        (WebCore::WebGLRenderingContext::uniform2i):
        (WebCore::WebGLRenderingContext::uniform2iv):
        (WebCore::WebGLRenderingContext::uniform3f):
        (WebCore::WebGLRenderingContext::uniform3fv):
        (WebCore::WebGLRenderingContext::uniform3i):
        (WebCore::WebGLRenderingContext::uniform3iv):
        (WebCore::WebGLRenderingContext::uniform4f):
        (WebCore::WebGLRenderingContext::uniform4fv):
        (WebCore::WebGLRenderingContext::uniform4i):
        (WebCore::WebGLRenderingContext::uniform4iv):
        (WebCore::WebGLRenderingContext::uniformMatrix2fv):
        (WebCore::WebGLRenderingContext::uniformMatrix3fv):
        (WebCore::WebGLRenderingContext::uniformMatrix4fv):
        (WebCore::WebGLRenderingContext::useProgram):
        (WebCore::WebGLRenderingContext::validateProgram):
        (WebCore::WebGLRenderingContext::vertexAttribPointer):
        * html/canvas/WebGLRenderingContext.h:
        (WebCore::WebGLRenderingContext::cleanupAfterGraphicsCall):
        * platform/graphics/GraphicsContext3D.h:
        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::getActiveAttrib):
        (WebCore::GraphicsContext3D::getActiveUniform):
        (WebCore::GraphicsContext3D::getError):
        (WebCore::GraphicsContext3D::synthesizeGLError):
=======
2010-02-01  Philippe Normand  <pnormand@igalia.com>

        Rubber stamped by Xan Lopez.
>>>>>>> webkit.org at r54127

        Fixed compilation warning about unsigned vs signed comparison.

        * plugins/gtk/PluginViewGtk.cpp:
        (WebCore::PluginView::paint):

2010-01-31  Kent Tamura  <tkent@chromium.org>

        Unreviewed. Revert r54112 and r54124 because of Windows build error.

        * Android.mk:
        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * html/canvas/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::scale):
        (WebCore::CanvasRenderingContext2D::rotate):
        (WebCore::CanvasRenderingContext2D::translate):
        (WebCore::CanvasRenderingContext2D::transform):
        (WebCore::CanvasRenderingContext2D::setTransform):
        (WebCore::CanvasRenderingContext2D::isPointInPath):
        (WebCore::CanvasRenderingContext2D::willDraw):
        * html/canvas/CanvasRenderingContext2D.h:
        * platform/graphics/GraphicsContext.h:
        * platform/graphics/Path.h:
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        * platform/graphics/cairo/GraphicsContextPlatformPrivateCairo.h:
        * platform/graphics/cairo/PathCairo.cpp:
        * platform/graphics/cairo/TransformationMatrixCairo.cpp:
        * platform/graphics/cg/GraphicsContextCG.cpp:
        * platform/graphics/cg/GraphicsContextPlatformPrivateCG.h:
        * platform/graphics/cg/PathCG.cpp:
        * platform/graphics/cg/TransformationMatrixCG.cpp:
        * platform/graphics/haiku/GraphicsContextHaiku.cpp:
        * platform/graphics/haiku/PathHaiku.cpp:
        * platform/graphics/qt/GraphicsContextQt.cpp:
        * platform/graphics/qt/PathQt.cpp:
        * platform/graphics/qt/TransformationMatrixQt.cpp:
        * platform/graphics/skia/GraphicsContextSkia.cpp:
        * platform/graphics/skia/PathSkia.cpp:
        * platform/graphics/skia/TransformationMatrixSkia.cpp:
        * platform/graphics/transforms/AffineTransform.cpp: Removed.
        * platform/graphics/transforms/AffineTransform.h: Removed.
        * platform/graphics/wince/GraphicsContextWince.cpp:
        * platform/graphics/wx/GraphicsContextWx.cpp:
        * platform/graphics/wx/PathWx.cpp:
        * platform/graphics/wx/TransformationMatrixWx.cpp:
        (WebCore::TransformationMatrix::operator wxGraphicsMatrix):

2010-01-31  Kwang Yul Seo  <skyul@company100.net>

        Reviewed by Darin Adler.

        Limit the scope of packing alignment to avoid MSVC C4103 warning.
        https://bugs.webkit.org/show_bug.cgi?id=34390

        Use pack(push, 16) and pack(pop) to limit the scope of packing
        alignment change.

        * bindings/js/JSSVGPODTypeWrapper.h:

2010-01-31  Kent Tamura  <tkent@chromium.org>

        Reviewed by Darin Adler.

        Fix valueAsNumber calculation for type=month.
        https://bugs.webkit.org/show_bug.cgi?id=34304

        valueAsNumber calculation for type=month which was checked in as
        r53893 was the number of milliseconds since UNIX epoch, and it was
        wrong. The correct way is the number months since UNIX epoch.

        * html/DateComponents.cpp:
        (WebCore::DateComponents::setMonthsSinceEpoch):
        (WebCore::DateComponents::monthsSinceEpoch):
        * html/DateComponents.h: Declare setMonthsSinceEpoch() and monthsSinceEpoch().
        * html/HTMLInputElement.cpp:
        (WebCore::HTMLInputElement::parseToDouble):
          Switch to monthsSinceEpoch() for type=MONTH.
        (WebCore::HTMLInputElement::valueAsDate):
          Add code with millisecondsSinceEpoch() for MONTH because
          parseToDouble() changed its behavior.
        (WebCore::HTMLInputElement::setValueAsNumber):
          Use setMonthsSinceEpoch() for MONTH.

2010-01-31  Dan Bernstein  <mitz@apple.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: REGRESSION: Numbers in bubbles are vertically off-center
        https://bugs.webkit.org/show_bug.cgi?id=34398

        * inspector/front-end/inspector.css: Specify line-height: normal for
        ".console-message .bubble" and ".sidebar-tree-item .status .bubble".

2010-01-28  Ojan Vafai  <ojan@chromium.org>

        Reviewed by Darin Adler.

        Implement CSSOM Range.getClientRects for collapsed selections
        https://bugs.webkit.org/show_bug.cgi?id=34239

        When getting the quads for a range on a text node, allow returning
        zero width quads. This leaves the case of collapsed selections inside
        elements still not fixed, but no worse.

        * rendering/InlineTextBox.cpp:
        (WebCore::InlineTextBox::selectionRect):
        * rendering/RenderText.cpp:
        (WebCore::RenderText::absoluteQuadsForRange):

2010-01-31  Oliver Hunt  <oliver@apple.com>

        Reviewed by Simon Fraser.

        Animated scaling of background-image is too slow
        https://bugs.webkit.org/show_bug.cgi?id=33808

        Implement a version of the RenderImage animated scaling optimisation
        for background images. Due to the possibility of arbitrary transforms
        being applied to containing elements we explicitly check the current
        CTM of the context for scaling or rotation.

        * platform/graphics/GraphicsContext.cpp:
        (WebCore::GraphicsContext::drawTiledImage):
        * platform/graphics/GraphicsContext.h:
        * platform/graphics/transforms/TransformationMatrix.h:
        (WebCore::TransformationMatrix::isIdentityOrTranslation):
        * rendering/RenderBoxModelObject.cpp:
        (WebCore::RenderBoxModelScaleData::RenderBoxModelScaleData):
        (WebCore::RenderBoxModelScaleData::~RenderBoxModelScaleData):
        (WebCore::RenderBoxModelScaleData::hiqhQualityRepaintTimer):
        (WebCore::RenderBoxModelScaleData::size):
        (WebCore::RenderBoxModelScaleData::setSize):
        (WebCore::RenderBoxModelScaleData::lastPaintTime):
        (WebCore::RenderBoxModelScaleData::setLastPaintTime):
        (WebCore::RenderBoxModelScaleData::useLowQualityScale):
        (WebCore::RenderBoxModelScaleData::transform):
        (WebCore::RenderBoxModelScaleData::setTransform):
        (WebCore::RenderBoxModelScaleData::setUseLowQualityScale):
        (WebCore::RenderBoxModelScaleObserver::boxModelObjectDestroyed):
        (WebCore::RenderBoxModelScaleObserver::highQualityRepaintTimerFired):
        (WebCore::RenderBoxModelScaleObserver::shouldPaintBackgroundAtLowQuality):
        (WebCore::RenderBoxModelObject::highQualityRepaintTimerFired):
        (WebCore::RenderBoxModelObject::~RenderBoxModelObject):
        (WebCore::RenderBoxModelObject::paintFillLayerExtended):
        * rendering/RenderBoxModelObject.h:

2010-01-31  Dirk Schulze  <krit@webkit.org>

        Reviewed by Simon Fraser.

        Add back an AffineTransform class for use by SVG
        https://bugs.webkit.org/show_bug.cgi?id=33750

        These are the first steps on reimplementing AffineTransform. Unlike
        the old affine code, this one is platform independent like TransformationMatrix.
        AffineTransform has the benefit, that it stores just 6 doubles instead of
        16 in TransformationMatrix. The calculations of transformations are not that
        complex and can improve the memory usage and speed of SVG.
        AffineTransform can be used by HTML Canvas3D or SVG, since they are 2D related (at
        least for the moment).
        HTML Canvas is the first that makes use of the new AffineTransform. Next patches
        will introduce the affine code to SVG.

        No new tests. The new AffineTransformation code is tested by fast/canvas.

        * Android.mk:
        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * html/canvas/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::scale):
        (WebCore::CanvasRenderingContext2D::rotate):
        (WebCore::CanvasRenderingContext2D::translate):
        (WebCore::CanvasRenderingContext2D::transform):
        (WebCore::CanvasRenderingContext2D::setTransform):
        (WebCore::CanvasRenderingContext2D::isPointInPath):
        (WebCore::CanvasRenderingContext2D::willDraw):
        * html/canvas/CanvasRenderingContext2D.h:
        * platform/graphics/GraphicsContext.h:
        * platform/graphics/Path.h:
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::GraphicsContext::getAffineCTM):
        (WebCore::GraphicsContext::concatCTM):
        * platform/graphics/cairo/GraphicsContextPlatformPrivateCairo.h:
        (WebCore::GraphicsContextPlatformPrivate::concatCTM):
        * platform/graphics/cairo/PathCairo.cpp:
        (WebCore::Path::transform):
        * platform/graphics/cairo/TransformationMatrixCairo.cpp:
        (WebCore::AffineTransform::operator cairo_matrix_t):
        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::GraphicsContext::concatCTM):
        (WebCore::GraphicsContext::getAffineCTM):
        * platform/graphics/cg/GraphicsContextPlatformPrivateCG.h:
        (WebCore::GraphicsContextPlatformPrivate::concatCTM):
        * platform/graphics/cg/PathCG.cpp:
        (WebCore::Path::transform):
        * platform/graphics/cg/TransformationMatrixCG.cpp:
        (WebCore::AffineTransform::operator CGAffineTransform):
        * platform/graphics/haiku/GraphicsContextHaiku.cpp:
        (WebCore::GraphicsContext::getAffineCTM):
        (WebCore::GraphicsContext::concatCTM):
        * platform/graphics/haiku/PathHaiku.cpp:
        (WebCore::Path::transform):
        * platform/graphics/qt/GraphicsContextQt.cpp:
        (WebCore::GraphicsContext::getAffineCTM):
        (WebCore::GraphicsContext::concatCTM):
        * platform/graphics/qt/PathQt.cpp:
        (WebCore::Path::transform):
        * platform/graphics/qt/TransformationMatrixQt.cpp:
        (WebCore::AffineTransform::operator QTransform):
        * platform/graphics/skia/GraphicsContextSkia.cpp:
        (WebCore::GraphicsContext::getAffineCTM):
        * platform/graphics/skia/PathSkia.cpp:
        (WebCore::Path::transform):
        * platform/graphics/skia/TransformationMatrixSkia.cpp:
        (WebCore::AffineTransform::operator SkMatrix):
        * platform/graphics/transforms/AffineTransform.cpp: Added.
        (WebCore::affineTransformDecompose):
        (WebCore::affineTransformCompose):
        (WebCore::AffineTransform::AffineTransform):
        (WebCore::AffineTransform::reset):
        (WebCore::AffineTransform::setMatrix):
        (WebCore::AffineTransform::isIdentity):
        (WebCore::AffineTransform::det):
        (WebCore::AffineTransform::isInvertible):
        (WebCore::AffineTransform::inverse):
        (WebCore::AffineTransform::multiply):
        (WebCore::AffineTransform::multLeft):
        (WebCore::AffineTransform::rotate):
        (WebCore::AffineTransform::scale):
        (WebCore::AffineTransform::translate):
        (WebCore::AffineTransform::scaleNonUniform):
        (WebCore::AffineTransform::rotateFromVector):
        (WebCore::AffineTransform::flipX):
        (WebCore::AffineTransform::flipY):
        (WebCore::AffineTransform::shear):
        (WebCore::AffineTransform::skew):
        (WebCore::AffineTransform::skewX):
        (WebCore::AffineTransform::skewY):
        (WebCore::makeMapBetweenRects):
        (WebCore::AffineTransform::map):
        (WebCore::AffineTransform::mapPoint):
        (WebCore::AffineTransform::mapRect):
        (WebCore::AffineTransform::blend):
        * platform/graphics/transforms/AffineTransform.h: Added.
        (WebCore::AffineTransform::a):
        (WebCore::AffineTransform::setA):
        (WebCore::AffineTransform::b):
        (WebCore::AffineTransform::setB):
        (WebCore::AffineTransform::c):
        (WebCore::AffineTransform::setC):
        (WebCore::AffineTransform::d):
        (WebCore::AffineTransform::setD):
        (WebCore::AffineTransform::e):
        (WebCore::AffineTransform::setE):
        (WebCore::AffineTransform::f):
        (WebCore::AffineTransform::setF):
        (WebCore::AffineTransform::operator== ):
        (WebCore::AffineTransform::operator!=):
        (WebCore::AffineTransform::operator*=):
        (WebCore::AffineTransform::operator*):
        (WebCore::AffineTransform::setMatrix):
        * platform/graphics/wince/GraphicsContextWince.cpp:
        (WebCore::GraphicsContext::concatCTM):
        (WebCore::GraphicsContext::getAffineCTM):
        * platform/graphics/wx/GraphicsContextWx.cpp:
        (WebCore::GraphicsContext::getAffineCTM):
        (WebCore::GraphicsContext::concatCTM):
        * platform/graphics/wx/PathWx.cpp:
        (WebCore::Path::transform):
        * platform/graphics/wx/TransformationMatrixWx.cpp:
        (WebCore::AffineTransform::operator wxGraphicsMatrix):

2010-01-31  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: [REGRESSION] Breakpoint source line is not displayed
        in the breakpoint manager.

        * inspector/front-end/SourceFrame.js:
        (WebInspector.SourceFrame.prototype._addBreakpointToSource):

2010-01-31  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Introduce NativeTextViewer.

        This change handles rendering highlighted text, using browser's
        selection/drag/drop/click logic. Breakpoint decorations and
        program counter is working.

        Todo: line numbers are painted 'under' the text when scrolling
        horizontally, search is not yet implemented.

        https://bugs.webkit.org/show_bug.cgi?id=34391

        * WebCore.gypi:
        * WebCore.vcproj/WebCore.vcproj:
        * inspector/front-end/DivBasedTextViewer.js: Added.
        (WebInspector.DivBasedTextViewer):
        (WebInspector.DivBasedTextViewer.prototype._textChanged):
        (WebInspector.DivBasedTextViewer.prototype._createLineDivs):
        (WebInspector.DivBasedTextViewer.prototype._updatePreferredSize):
        (WebInspector.DivBasedTextViewer.prototype._scroll):
        (WebInspector.DivBasedTextViewer.prototype._registerMouseListeners):
        (WebInspector.DivBasedTextViewer.prototype._registerKeyboardListeners):
        (WebInspector.DivBasedTextViewer.prototype._registerClipboardListeners):
        (WebInspector.DivBasedTextViewer.prototype._paintSelection):
        (WebInspector.DivBasedTextViewer.prototype._positionDivDecoration):
        (WebInspector.DivBasedTextViewer.prototype._mouseDown):
        (WebInspector.DivBasedTextViewer.prototype._contextMenu):
        (WebInspector.DivBasedTextViewer.prototype._caretForMouseEvent):
        (WebInspector.DivBasedTextViewer.prototype._paintLine):
        (WebInspector.DivBasedTextViewer.prototype._createSpan):
        * inspector/front-end/Settings.js:
        * inspector/front-end/SourceFrame.js:
        (WebInspector.SourceFrame.prototype.clearMessages):
        (WebInspector.SourceFrame.prototype.sizeToFitContentHeight):
        (WebInspector.SourceFrame.prototype._createEditorIfNeeded):
        (WebInspector.SourceFrame.prototype._addMessageToSource):
        (WebInspector.SourceFrame.prototype.resize):
        * inspector/front-end/TextEditor.js:
        (WebInspector.TextEditor):
        (WebInspector.TextEditor.prototype.setDivDecoration):
        (WebInspector.TextEditor.prototype._registerMouseListeners):
        (WebInspector.TextEditor.prototype._registerKeyboardListeners):
        (WebInspector.TextEditor.prototype._registerClipboardListeners):
        (WebInspector.TextEditor.prototype.reveal):
        (WebInspector.TextEditor.prototype._textChanged):
        (WebInspector.TextEditor.prototype.revalidateDecorationsAndPaint):
        (WebInspector.TextEditor.prototype._updatePreferredSize):
        (WebInspector.TextEditor.prototype.resize):
        (WebInspector.TextEditor.prototype._paintLinesContinuation):
        (WebInspector.TextEditor.prototype._paintLine):
        (WebInspector.TextEditor.prototype._contextMenu):
        (WebInspector.TextEditor.prototype._caretForMouseEvent):
        (WebInspector.TextEditor.prototype._changeFont):
        * inspector/front-end/TextEditorHighlighter.js:
        (WebInspector.TextEditorHighlighter.prototype._lex):
        * inspector/front-end/WebKit.qrc:
        * inspector/front-end/inspector.html:
        * inspector/front-end/textEditor.css:

2010-01-31  Benjamin Poulain  <benjamin.poulain@nokia.com>

        Reviewed by Eric Seidel.

        [Qt] Enable FAST_MOBILE_SCROLLING on Qt embedded platforms
        https://bugs.webkit.org/show_bug.cgi?id=34168

        Enable FAST_MOBILE_SCROLLING for Qt on Maemo 5, Linux embedded
        and Symbian

        * WebCore.pro:

2010-01-31  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Pavel Feldman.

        Make ScriptState destructor protected since all non-empty
        ScriptStates are managed by GC. Remove obsolete constructor.

        https://bugs.webkit.org/show_bug.cgi?id=34266

        * bindings/v8/ScriptState.cpp:
        * bindings/v8/ScriptState.h:

2010-01-30  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dan Bernstein.

        Use CGGradient on Leopard and later, since it's faster than CGShading
        https://bugs.webkit.org/show_bug.cgi?id=34384

        Use CGGradient on Leopard and later, rather than CGShading, for
        performance.

        * platform/graphics/Gradient.h:
        * platform/graphics/Gradient.cpp:
        (WebCore::Gradient::sortStopsIfNecessary): Utility method to sort stops.
        Did not call this from getColor() to avoid overhead of a function call.

        * platform/graphics/cg/GradientCG.cpp:
        (WebCore::Gradient::platformDestroy): Use CGGradientRelease() post-Tiger.
        (WebCore::Gradient::platformGradient): Create and return a CGGradientRef post-Tiger.
        (WebCore::Gradient::fill): Call new paint() method.
        (WebCore::Gradient::paint): New convenence method that avoids testing
        isRadial() in a bunch of other places.

        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::GraphicsContext::fillPath): Call the gradient's paint() method.
        (WebCore::GraphicsContext::strokePath): Ditto
        (WebCore::GraphicsContext::fillRect): Ditto
        (WebCore::GraphicsContext::strokeRect): Ditto

2010-01-30  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Adele Peterson.

        Do color animations on premultiplied colors
        https://bugs.webkit.org/show_bug.cgi?id=34383
        
        Convert colors to premultiplied alpha before interpolating them,
        then convert the result back to non-premultiplied. This gives better
        results when animating from transparent colors.

        Test: transitions/color-transition-premultiplied.html

        * page/animation/AnimationBase.cpp:
        (WebCore::blendFunc):

2010-01-30  Gustavo Noronha Silva  <gns@gnome.org>

        Build fixes needed for make distcheck.

        * GNUmakefile.am:

2010-01-29  Mark Rowe  <mrowe@apple.com>

        Stop copying an IDL file in to the framework wrapper.

        * WebCore.xcodeproj/project.pbxproj:

2010-01-29  Mark Rowe  <mrowe@apple.com>

        Sort Xcode projects.

        * WebCore.xcodeproj/project.pbxproj:

== Rolled over to ChangeLog-2010-01-29 ==
